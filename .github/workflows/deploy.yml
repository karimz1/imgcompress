name: Pipeline for imgcompress

on:
  push:
    branches:
      - main
      - feature/*
      - bugfix/*
      - enhancements/*
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ "linux/amd64", "linux/arm64" ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for ${{ matrix.platform }}
        run: |
          cd .devcontainer/
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --load \
            -t devcontainer:local-test .

      - name: Run Tests on ${{ matrix.platform }}
        run: |
          docker run --rm \
            --entrypoint /bin/sh \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$(pwd):/app/" \
            -e IS_RUNNING_IN_GITHUB_ACTIONS=$IS_RUNNING_IN_GITHUB_ACTIONS \
            --name devcontainer \
            devcontainer:local-test /app/runTests.sh
        continue-on-error: false
        env:
          IS_RUNNING_IN_GITHUB_ACTIONS: true
  
  test-e2e:
    needs: test-backend
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ "linux/amd64" ] # works only on amd64 for now I work on a fix for arm64 later
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Application Container Image for ${{ matrix.platform }}
        run: |
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --load \
            --no-cache \
            -t karimz1/imgcompress:local-test \
            .

      - name: Run Application Container (Host Networking) for ${{ matrix.platform }}
        run: |
          docker run --rm -d \
            --platform ${{ matrix.platform }} \
            --network host \
            --name app \
            karimz1/imgcompress:local-test web

      - name: Wait for Application to be Ready (using localhost) for ${{ matrix.platform }}
        run: |
          BASE_URL="http://localhost:5000"
          echo "Waiting for the application to be ready on ${BASE_URL}..."
          max_attempts=120
          attempt_num=1
          until curl -s --fail "$BASE_URL" > /dev/null; do
            if [ "$attempt_num" -eq "$max_attempts" ]; then
              echo "Application failed to start after $max_attempts attempts."
              exit 1
            fi
            echo "Waiting for app... attempt $attempt_num"
            attempt_num=$((attempt_num+1))
            sleep 1
          done
          echo "Application is up! Continuing..."

      - name: Build Dev Container Image for ${{ matrix.platform }}
        run: |
          cd .devcontainer/
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --load \
            --no-cache \
            -t devcontainer:local-test \
            .

      - name: Run E2E Tests in Dev Container (Host Networking)
        run: |
          docker run --rm \
            --platform ${{ matrix.platform }} \
            --entrypoint /bin/sh \
            --network host \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$(pwd):/app/" \
            -e IS_RUNNING_IN_GITHUB_ACTIONS=true \
            -e PLAYWRIGHT_BASE_URL=http://localhost:5000 \
            --name devcontainer_e2e \
            devcontainer:local-test -c "/app/run-e2e.sh"

      - name: Zip E2E Test Results for ${{ matrix.platform }}
        run: |
          zip -r e2e-test-results-${{ matrix.platform }}.zip frontend/e2e-test-results

      - name: Upload E2E Test Results Artifact for ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.platform }}
          path: e2e-test-results-${{ matrix.platform }}.zip

  deploy-image-to-dockerhub:
    needs: [test-e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define Tags
        id: define-tags
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "ADDITIONAL_TAG=karimz1/imgcompress:latest" >> $GITHUB_ENV
          else
            echo "ADDITIONAL_TAG=karimz1/imgcompress:beta" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.ADDITIONAL_TAG }}
