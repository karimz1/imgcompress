name: Build and Test Docker Image

on:
  push:
    branches:
      - main
      - feature/*
      - bugfix/*
      - enhancements/*
  pull_request:

jobs:
  test-e2e:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create Docker Network
        run: docker network create e2e-net || true

      - name: Build Application Container Image
        run: docker build --no-cache -t karimz1/imgcompress:local-test .

      - name: Run Application Container
        run: |
          docker run --rm -d \
            --network e2e-net \
            --name app \
            karimz1/imgcompress:local-test web

      - name: Wait for Application to be Ready
        run: |
          BASE_URL="http://app:5000"
          echo "Waiting for the application to be ready on ${BASE_URL}..."
          max_attempts=120
          attempt_num=1
          until curl -s --fail "$BASE_URL" > /dev/null; do
            if [ "$attempt_num" -eq "$max_attempts" ]; then
              echo "Application failed to start after $max_attempts attempts."
              exit 1
            fi
            echo "Waiting for app... attempt $attempt_num"
            attempt_num=$((attempt_num+1))
            sleep 1
          done
          echo "Application is up! Continuing..."

      # Optional: Debugging step to print app logs if needed.
      - name: Check App Container Logs
        run: docker logs app

      - name: Build Dev Container Image
        run: |
          cd .devcontainer/
          docker build --no-cache -t devcontainer:local-test .

      - name: Run E2E Tests in Dev Container
        run: |
          docker run --rm \
            --entrypoint /bin/sh \
            --network e2e-net \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$(pwd):/app/" \
            -e IS_RUNNING_IN_GITHUB_ACTIONS=true \
            -e PLAYWRIGHT_BASE_URL=http://app:5000 \
            --name devcontainer2 \
            devcontainer:local-test -c "/app/run-e2e.sh"

      - name: Cleanup Docker Containers and Network
        if: always()
        run: |
          docker stop app || true
          docker network rm e2e-net || true
