# .github/workflows/deploy-to-dockerhub.yml
name: Deployment for imgcompress to Docker Hub

on:
  push:
    branches: [main, Improvements/*]
  repository_dispatch:
    types: [deploy]

jobs:
  deploy-image-to-dockerhub:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.define-tags.outputs.tag }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Define Tags
        id: define-tags
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "main" ]]; then
            TAG=karimz1/imgcompress:latest
          else
            TAG=karimz1/imgcompress:beta
          fi
          echo "ADDITIONAL_TAG=$TAG" >> "$GITHUB_ENV"
          echo "tag=$TAG"            >> "$GITHUB_OUTPUT"

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.ADDITIONAL_TAG }}

  update-dockerhub-description:
    needs: [deploy-image-to-dockerhub]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests jq

      - name: Update Docker Hub description
        id: update-desc
        run: |
          result=$(python update_dockerhub_description.py \
               --readme ReadMe.md \
               --branch "${{ github.ref }}" \
               --base-url "https://raw.githubusercontent.com/karimz1/imgcompress/main")

          echo "Raw JSON: $result"

          # --- parse the JSON -------------------------------------------------------
          status=$(echo "$result" | jq -r '.status')
          message=$(echo "$result" | jq -r '.message')

          # --- classify -------------------------------------------------------------
          if [ "$status" = "success" ]; then
            echo "skipped=false" >> "$GITHUB_OUTPUT"
          else                              # error causes job to fail
            echo "::error::$message"
            exit 1
          fi
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_REPO: imgcompress

  deployment-summary:
    needs: [deploy-image-to-dockerhub, update-dockerhub-description]
    runs-on: ubuntu-latest
    steps:
      - name: Write summary card
        if: always()
        shell: bash
        run: |
          DEPLOY_RESULT="${{ needs.deploy-image-to-dockerhub.result }}"
          DESC_RESULT="${{ needs.update-dockerhub-description.result }}"

          {
            if [[ "$DEPLOY_RESULT" == "success" ]]; then
              echo "### 🐳 Deployment Summary"
              echo
              echo "Image pushed as \`${{ needs.deploy-image-to-dockerhub.outputs.image_tag }}\`"
              if [[ "$DESC_RESULT" == "skipped" ]]; then
                echo ""
                echo "Docker Hub description **skipped** :pause_button:"
              elif [[ "$DESC_RESULT" == "success" ]]; then
                echo ""
                echo "Docker Hub description **updated** :white_check_mark:"
              else
                echo ""
                echo "Docker Hub description **failed** :x:"
              fi
            else
              echo "### 🚨 Deployment failed"
              echo "See the *deploy-image-to-dockerhub* job for logs."
            fi
          } >> "$GITHUB_STEP_SUMMARY"
